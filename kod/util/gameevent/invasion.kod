// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


///////////////////////////////////////////////////////////////////////////
Invasion is GameEvent

constants:

   include blakston.khd

resources:

   include invasion.lkod

   invasion_start_msg = "Invasion Started in %s!"
   invasion_end_msg = "Invasion Ended in %s, good job!"

classvars:

   vrStartMessage = invasion_start_msg
   vrEndMessage = invasion_end_msg

properties:

   piUpdateTimer = $
   pbEventEnded = FALSE
   piActiveRoom = $
   poActiveRoom = $

messages:

   Constructor(who=$)
   {
      if who = $ OR NOT IsClass(who, &User)
      {
         piActiveRoom = RID_TOS;
         poActiveRoom = Send(SYS, @FindRoomByNum, #num=piActiveRoom);
         
         propagate;
      }

      
      poActiveRoom = Send(who, @GetOwner);
      piActiveRoom = Send(poActiveRoom, @GetRoomNum);

      Send(self,@StartEvent);

      piUpdateTimer = CreateTimer(self, @Update, 5000);

      propagate;
   }

   Constructed()
   {
      propagate;
   }

   Delete()
   {
      pbEventEnded = TRUE;

      propagate;
   }

   Update()
   {
      if NOT pbEventEnded
      {
         Debug(GetClass(self),"is running");
         piUpdateTimer = CreateTimer(self, @Update, 5000);
      }
      else
      {
         if IsTimer(piUpdateTimer)
         {
            DeleteTimer(piUpdateTimer);
            piUpdateTimer = $;
         }

         Debug(GetClass(self),"has ended - updates stopped");
      }

      propagate;
   }

   StartEvent()
   {
      propagate;
   }

   EndEvent()
   {
      pbEventEnded = TRUE;

      propagate;
   }

end
///////////////////////////////////////////////////////////////////////////
