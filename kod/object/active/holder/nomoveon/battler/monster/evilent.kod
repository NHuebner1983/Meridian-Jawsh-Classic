// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
EvilEnt is Monster

constants:

   include blakston.khd

   PALSY_CHANCE = 10

resources:

   include evilent.lkod

   EvilEnt_koc_name_rsc = "teotezmecya"
   EvilEnt_name_rsc = "diseased tree"
   EvilEnt_icon_rsc = res0003a.bgf
   EvilEnt_desc_rsc = \
      "Feeding upon the dredges of the tainted soil in the land, this "
      "living tree exudes evil, its sap blackened with hate."

   EvilEnt_leaves_sparse_rsc = res0003c.bgf

   EvilEnt_dead_icon_rsc = res0003d.bgf
   EvilEnt_dead_leaves_sparse_rsc = res0003f.bgf
   EvilEnt_dead_name_rsc = "dead remains of diseased tree"

   EvilEnt_sound_hit = tr_atkh.ogg
   EvilEnt_sound_miss = tr_atkm.ogg
   EvilEnt_sound_death = tr_dth.ogg
   EvilEnt_sound_aware = tr_awr.ogg

classvars:

   vrKocName = EvilEnt_koc_name_rsc
   vrName = EvilEnt_name_rsc
   vrIcon = EvilEnt_icon_rsc
   vrDesc = EvilEnt_desc_rsc
   vrDead_icon = EvilEnt_dead_icon_rsc
   vrDead_name = EvilEnt_dead_name_rsc

   viTreasure_type = TID_ENT
   viAttack_type = ATCK_WEAP_WHIP
   viSpeed = SPEED_NONE
   viAttributes = MOB_NOMOVE
   viDefault_behavior = AI_NOMOVE | AI_FIGHT_KARMA_AGGRESSIVE
   viVisionDistance = 14
   
   viLevel = 60
   viDifficulty = 4
   viAmountofLoot = 3
   viKarma = -50
   viCashmin = 200
   viCashmax = 600

   vrSound_hit = EvilEnt_sound_hit
   vrSound_miss = EvilEnt_sound_miss
   vrSound_aware = EvilEnt_sound_aware
   vrSound_death = EvilEnt_sound_death

   vrLeaves = EvilEnt_leaves_sparse_rsc
   vrDead_leaves = EvilEnt_dead_leaves_sparse_rsc

   // 1 in x chance to cast a spell.
   viSpellChance = 8

properties:

   piAnimation = ANIM_NONE

   piSpellPower = 90
   piMax_mana = 20

   piReputationGroup = REP_FAROL
   
messages:

   Constructor(iTrunkColor=$, iLeavesColor=$)
   {
      local iTrunk, iLeaves, lTrunk, lLeaves;

      // Pick random colors.
      iTrunk = iTrunkColor;
      if iTrunk = $
      {
         lTrunk = [ XLAT_TO_SKIN4, XLAT_TO_SKIN4 ];
         iTrunk = Nth(lTrunk,Random(1,Length(lTrunk)));
      }

      iLeaves = iLeavesColor;
      if iLeaves = $
      {
         lLeaves = [ XLAT_TO_ORANGE, XLAT_TO_SKIN4, XLAT_TO_YELLOW];
         iLeaves = Nth(lLeaves,Random(1,Length(lLeaves)));
      }

      piColor_Translation = Send(SYS,@EncodeTwoColorXLAT,#color1=iTrunk,
                                 #color2=iLeaves);

      propagate;
   }

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_COLD, 50 ],
                        [ATCK_WEAP_BLUDGEON, 50 ],
                        [ATCK_WEAP_SLASH, -10 ],
                        [-ATCK_SPELL_FIRE, -10 ] ];

      plSpellBook = [ [SID_LIGHTNING, 5, 100] ];

      plReputationEnemies = [REP_UNDEAD];

      propagate;
   }

   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   SendMoveAnimation()
   {
      if piColor_Translation <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION, 1,piColor_Translation);
      }

      AddPacket(1,ANIMATE_CYCLE, 4,200, 2,1, 2,2);

      return;
   }

   SendMoveOverlays()
   {
      AddPacket(1,1);

      AddPacket(4,vrLeaves, 1,HS_HEAD);

      if piColor_Translation <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION, 1,piColor_Translation);
      }

      AddPacket(1,ANIMATE_CYCLE, 4,200, 2,1, 2,2);

      return;
   }

   SendAnimation()
   {
      if piColor_Translation <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION, 1,piColor_Translation);
      }

      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE, 4,200, 2,2, 2,4, 2,1);

         return;
      }

      // if no body animation
      AddPacket(1,ANIMATE_NONE,2,1);

      return;
   }

   SendOverlays()
   {
      // Send overlay bitmap info to user.
      AddPacket(1,1);

      AddPacket(4,vrLeaves, 1,HS_HEAD);

      if piColor_Translation <> 0
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piColor_Translation);
      }

      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE, 4,200, 2,2, 2,4, 2,1);

         return;
      }

      AddPacket(1,ANIMATE_NONE, 2,1);

      return;
   }

   AssessDamage(aSpell=0)
   {
      // Living trees get more dangerous if you burn 'em.

      if (aSpell & ATCK_SPELL_FIRE) AND piSpellChance > 2
      {
         piSpellChance = piSpellChance - 1;
      }

      propagate;
   }

   HitSideEffect(what = $, who=$)
   {
      local oSpell;

      oSpell = Send(SYS,@FindSpellByNum,#num=SID_ENFEEBLE);
      if NOT Send(what,@IsEnchanted,#what=oSpell)
         AND Random(1,PALSY_CHANCE) = 1
      {
         if who <> $
         {
            Send(oSpell,@CastSpell,#who=who,#lTargets=[what],#iSpellPower=50,
                  #bItemCast=TRUE);
         }
         else
         {
            Send(oSpell,@DoSpell,#what=self,#oTarget=what,#iSpellPower=50);
         }
      }

      return;
   }

   CreateDeadBody(killer=$)
   {
      return Create(&DeadBody,
                     #victim=self,
                     #killer=killer,
                     #BodyTranslation=piColor_Translation,
                     #LegsTranslation=piColor_Translation,
                     #PlayerBodyOverlay=vrDead_leaves);
   }

end
////////////////////////////////////////////////////////////////////////////////
