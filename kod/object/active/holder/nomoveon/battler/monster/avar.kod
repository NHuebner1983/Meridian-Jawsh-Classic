// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Avar is Monster

constants:

   include blakston.khd

   FRAME_STAND = 1
   FRAME_WALK_START = 2
   FRAME_WALK_END = 6
   FRAME_ATTACK_START = 7
   FRAME_ATTACK_END = 11

resources:

   include avar.lkod

   avar_default_name = "avar"
   avar_koc_name_rsc = "avar"
   avar_icon_rsc = avwar.bgf

   // Default name and desc!
   avar_name_rsc = "peet-seeeep avar warrior"
   avar_desc_rsc = \
      "Fierce warriors, these flightless bird men demand caution as you "
      "approach.  The plumage clearly denotes this Avar as being part of "
      "the noble Peet-Seeeep tribe."

   avar_bone_name = "chyup-tewee faction warrior"
   avar_bone_desc = \
      "Fierce warriors, these flightless bird men demand caution as you "
      "approach.  The plumage clearly denotes this Avar as being part of "
      "the mighty Chyup-Tewee tribe which has aligned with the Bone faction."

   avar_nomagic_name = "kyip-kyip-kreeet avar warrior"
   avar_nomagic_desc = \
      "Fierce warriors, these flightless bird men demand caution as you "
      "approach.  The plumage clearly denotes this Avar as being part of "
      "the savage Kyip-Kyip-Kreeet tribe."

   avar_dead_icon_rsc = avwarX.bgf
   avar_dead_name_rsc = "slain avar"

   avar_sound_hit = av_atkh.ogg
   avar_sound_miss = av_atkm.ogg
   avar_sound_death = av_dth.ogg
   avar_sound_aware = av_awr.ogg

classvars:

   vrKocName = avar_koc_name_rsc

   vrIcon = avar_icon_rsc
   vrDead_icon = avar_dead_icon_rsc
   vrDead_name = avar_dead_name_rsc
 
   viIndefinite = ARTICLE_AN
   viTreasure_type = TID_AVAR
   viAttack_type = ATCK_WEAP_BLUDGEON
   viSpeed = SPEED_AVERAGE
   viDefault_behavior = \
      AI_MOVE_REGROUP | AI_FIGHT_AGGRESSIVE | AI_FIGHT_MONSTERS
   viLevel = 120
   viDifficulty = 7
   viAmountofLoot = 5
   viVisionDistance = 16

   // Attack range of 160, or 2.5 row/col.
   viAttackRange = 160

   viKarma = 80
   viWimpy = 8
   viCashmin = 600
   viCashmax = 1200
   vrSound_hit = avar_sound_hit
   vrSound_miss = avar_sound_miss
   vrSound_aware = avar_sound_aware
   vrSound_death = avar_sound_death

properties:

   vrName = avar_name_rsc
   vrDesc = avar_desc_rsc

   piAnimation = ANIM_NONE
   piColor_Translation = AVARCLAN_PROMAGIC

messages:

   Constructor(clan = $)
   {
      if clan <> $
      {
         Send(self,@SetClan,#clan=clan);
      }
      else
      {
         Post(self,@ChooseClan);
      }

      propagate;
   }

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_FIRE, 20 ],
                        [-ATCK_SPELL_COLD, -25 ],
                        [ATCK_WEAP_SLASH, 10 ],
                        [ATCK_WEAP_NERUDITE, -25 ] ];

      propagate;
   }

   SetClan(clan = AVARCLAN_PROMAGIC)
   {
      piColor_translation = clan;

      switch(clan)
      {
         case AVARCLAN_ANTIMAGIC:
            vrName = avar_nomagic_name;
            vrDesc = avar_nomagic_desc;
            piReputationGroup = REP_KKAVAR;
            plReputationEnemies = [REP_PSAVAR, REP_CTAVAR];
            break;

         case AVARCLAN_BONE_FACTION:
            vrName = avar_bone_name;
            vrDesc = avar_bone_desc;
            piReputationGroup = REP_CTAVAR;
            plReputationEnemies = [REP_PSAVAR, REP_KKAVAR];
            break;

         default:
            vrName = avar_name_rsc;
            vrDesc = avar_desc_rsc;
            piReputationGroup = REP_PSAVAR;
            plReputationEnemies = [REP_KKAVAR, REP_CTAVAR];
            break;
      }

      if poOwner <> $
      {
         Send(poOwner,@SomethingChanged,#what=self);
      }

      return;
   }

   GetClan()
   {
      return piColor_translation;
   }

   ChooseClan()
   {
      if poOwner = $
         OR NOT IsClass(poOwner,&KCForest)
      {
         if Random (1,5) > 1
         {
            Send(self,@SetClan,#clan=random(PT_PURPLETOBLUE,PT_PURPLETOYELLOW));
         }

         return;
      }

      // Ask our owner what clan we should be in.
      Send(self,@SetClan,#clan=Send(poOwner,@GetClan));

      return;
   }

   GetName()
   {
      if poOwner = $
      {
         return avar_default_name;
      }

      propagate;
   }

   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   SendMoveAnimation()
   {
      if (piColor_Translation <> 0)
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piColor_Translation);
      }

      AddPacket(1,ANIMATE_CYCLE,4,200,2,FRAME_WALK_START,2,FRAME_WALK_END);

      return;
   }

   SendAnimation()
   {
      if (piColor_Translation <> 0)
      {
         AddPacket(1,ANIMATE_TRANSLATION,1,piColor_Translation);
      }

      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE,4,200,2,FRAME_ATTACK_START,2,
                   FRAME_ATTACK_END,2,FRAME_STAND);

         return;
      }

      // if no body animation
      AddPacket(1,ANIMATE_NONE,2,3);

      return;
   }

   IsAlly(target = $, regroup = FALSE)
   {
      if IsClass(target,&AvarShaman)
         OR IsClass(target,&AvarChieftain)
      {
         if Send(target,@GetClan) = Send(self,@GetClan)
         {
            return TRUE;
         }

         propagate;
      }

      if IsClass(target,&Avar)
      {
         // Regroup makes the avars run to their shamans when they are wounded,
         // instead of each other.
         if regroup
         {
            return FALSE;
         }

         if Send(target,@GetClan) = Send(self,@GetClan)
         {
            return TRUE;
         }

         propagate;
      }

      // Charm checks up higher.
      propagate;
   }

   SpecialHatredBehavior(what=$)
   {
      /// Avars attack other avars of other clans, but only 
      /// in the temple of riija ruins (rid_KC3).
      if IsClass(what,&AvarShaman)
         OR IsClass(what,&AvarChieftain)
         OR IsClass(what,&Avar)
      {
         if poOwner <> $ AND Send(poOwner,@GetRoomNum) = RID_KC3
            AND Send(what,@GetClan) <> Send(self,@GetClan)
         {
            return 45;
         }
      }

      return 0;
   }

   GetTreasureType()
   {
      if poOwner <> $ and Send(poOwner,@GetRoomNum) = RID_KC3
      {
         return TID_NONE;
      }

      propagate;
   }

   CreateDeadBody(killer=$)
   {
      local oBody;

      oBody = $;
      if vrDead_icon <> $
      {
         oBody = Create(&DeadBody,
                        #victim=self,
                        #killer=killer,
                        #BodyTranslation=Send(self,@GetClan),
                        #drawfx=viDead_drawfx);
      }

      return oBody;
   }

end
////////////////////////////////////////////////////////////////////////////////
