// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
MarionBartender is MarionTown

constants:

   include blakston.khd

resources:

   include mrbart.lkod

   MarionBartender_name_rsc = "Tova"
   MarionBartender_icon_rsc = mrbart.bgf
   MarionBartender_desc_rsc = \
      "There is no overlooking Tova, a bellowing and uproarious man who "
      "takes life exactly as it comes through the front door of the Limping "
      "Toad.  He is the proprietor here, serving drinks and entertaining from "
      "his self-styled rostrum noted for its powerful stout."

   Tova_entrootberry_sale = \
      "Hmmm.  Why, yes, I do believe I have some entroot... since it's from "
      "my own private stash, I will have to charge extra...."

   Tova_cheers1 = "Thank you, m'%s. . . bottoms up!"
   Tova_cheers2 = "Thank you, I will, m'%s. Just one, for my chest. . ."
   Tova_cheers3 = "To your health, %s!"
   Tova_cheers4 =  "Aye, cheers!"

   tova_unwanted_keep = \
      "~k%s%s tells you, \"Well, how nice of you.  A gift.~n~k\""
   tova_unwanted_pay = \
      "~k%s%s tells you, \"What an interesting item!~n~k\""
   tova_unwanted_give = \
      "~k%s%s tells you, \"Ha, ha, you've got to be kidding me, stranger! "
      "This is a tavern, not a gypsy’s tent!~n~k\""

classvars:

   vrName = MarionBartender_name_rsc
   vrIcon = MarionBartender_icon_rsc
   vrDesc = MarionBartender_desc_rsc
   viMerchant_markup = MERCHANT_BARGAIN
   viAttributes = \
      MOB_NOFIGHT | MOB_RECEIVE | MOB_RANDOM | MOB_LISTEN \
      | MOB_NOMOVE | MOB_SELLER | MOB_COND_SELLER | MOB_FULL_TALK
   viOccupation = MOB_ROLE_BARTENDER

   vrUnwanted_keep = tova_unwanted_keep
   vrUnwanted_pay = tova_unwanted_pay
   vrUnwanted_give = tova_unwanted_give

properties:

messages:

   UserEntered(who=$)
   {
      if Send(who,@CheckPlayerFlag,#flag=PFLAG_MURDERER)
      {
         Send(self,@SetMood,#new_mood=piMood-3);

         propagate;
      }

      if Send(who,@GetHomeRoom) = RID_MAR_INN
      {
         Send(self,@SetMood,#new_mood=piMood+1);
      }

      propagate;
   }

   GotUnwantedItem(obj=$,who=$)
   {
      local i, TargetObj;

      /// First off, if it's not alcohol, who cares?
      if NOT IsClass(obj,&Food) OR NOT Send(obj,@IsAlcohol)
      {
         propagate;
      }

      /// We have to be sure we delete the mug here.   Remember,
      /// obj is a mirror of the real object.  We have to check to
      /// be sure the player has the object, and if not, we have
      /// to remove this amount from the player's inventory.
      /// Number items suck.

      TargetObj = $;
      foreach i in Send(who,@GetHolderPassive)
      {
         if getClass(i) = getClass(obj)
         {
            TargetObj = i;

            break;
         }
      }

      if TargetObj = $
      {
         Debug("Player offered an item he didn't have!");

         propagate;
      }

      if Send(TargetObj,@GetNumber) < Send(obj,@GetNumber)
      {
         Debug("Player offered more of an item than he possessed!");

         propagate;
      }

      Send(TargetObj,@SubtractNumber,#number=Send(obj,@GetNumber));
      Send(obj,@Delete);
      i = Random(1,4);

      if i=1
      {
         Send(self,@Say,#message_rsc=tova_cheers1,
               #parm1=Send(who,@GetLordLady));
      }

      if i= 2
      {
         Send(self,@Say,#message_rsc=tova_cheers2,
               #parm1=Send(who,@GetLordLady));
      }

      if i= 3
      {
         Send(self,@Say,#message_rsc=tova_cheers3,
               #parm1=Send(who,@GetTrueName));
      }

      if i= 4
      {
         Send(self,@Say,#message_rsc=tova_cheers4);
      }

      return;
   }

   AffectMood(what=$,why=$)
   {
      if why = MOODMOD_ACCEPT_ITEM
         AND IsClass(what,&Food)
         AND Send(what,@IsAlcohol)
      {
         Send(self,@SetMood,#new_mood=piMood+1);
      }

      if why = MOODMOD_SELL_ITEM
      {
         Send(self,@SetMood,#new_mood=piMood+1);
      }

      propagate;
   }

   SetMood(new_mood=$)
   {
      Send(poOwner,@SetInnkeeperMood,#iMood=new_mood);

      propagate;
   }

   SetForSale()
   {
      plFor_sale = [
         [
            Create(&Meatpie),
            Create(&Bread),
            Create(&Mug,#number=4),
            Create(&BeerMug)
         ],
         [
            SKID_LOGGING
         ], 
      $,$];

      return;
   }

   InitCondSale()
   {
      local oObj;

      oObj=Create(&EntrootBerry,#number=4);
      Send(Send(SYS,@GetLibrary),@AddToMobLib,#mob=self,
            #triggers=[Send(oObj,@GetName)],
            #action=[LIBACT_CONDITIONAL,oObj,200,Tova_entrootberry_sale]);

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
