// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
SpiderQueen is Monster

constants:

   include blakston.khd

   POISON_CHANCE = 15
   // 30 seconds duration
   POISON_DURATION = 30000
   // in health points * 10^-4 / second
   POISON_LOSSRATE = 2500

resources:

   include spdrquen.lkod

   spiderqueen_name_rsc = "queen spider"
   spiderqueen_koc_name_rsc = "kokinich"
   spiderqueen_icon_rsc = spdrqu.bgf
   spiderqueen_desc_rsc = \
      "The huge egg sac of the queen spider makes her slow and heavy, but "
      "dark intelligence shines in her many red eyes."
   qspider_illusion_poisoned = \
      "%s%s reels as poison from your attack courses through %s veins."

   spiderqueen_dead_icon_rsc = spdrquX.bgf
   spiderqueen_dead_name_rsc = "dead queen spider"

   spiderqueen_sound_hit = qn_atkh.ogg
   spiderqueen_sound_miss = qn_atkm.ogg
   spiderqueen_sound_death = qn_dth.ogg
   spiderqueen_sound_aware = qn_awr.ogg

classvars:

   vrKocName = spiderqueen_koc_name_rsc
   vrName = spiderqueen_name_rsc
   vrIcon = spiderqueen_icon_rsc
   vrDesc = spiderqueen_desc_rsc
   vrDead_icon = spiderqueen_dead_icon_rsc
   vrDead_name = spiderqueen_dead_name_rsc

   viTreasure_type = TID_SPIDER_QUEEN
   viSpeed = SPEED_NONE
   viAttack_type = ATCK_WEAP_BITE
   viAttributes = MOB_NOMOVE
   viLevel = 165
   viDifficulty = 9
   viAmountofLoot = 7

   // Low vision since we want her to switch targets if possible.
   viVisionDistance = 6

   // Attack range of 256 (4 row/col units).
   viAttackRange = 256

   viKarma = -90
   viDefault_behavior = AI_NOMOVE | AI_FIGHT_AGGRESSIVE | AI_FIGHT_SWITCHALOT
   viGender = GENDER_FEMALE
   viCashmin = 0
   viCashmax = 4000
   vrSound_hit = spiderqueen_sound_hit
   vrSound_miss = spiderqueen_sound_miss
   vrSound_aware = spiderqueen_sound_aware
   vrSound_death = spiderqueen_sound_death

properties:

   piAnimation = ANIM_NONE

messages:

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_ALL, 85],
                        [ATCK_WEAP_MAGIC, 85],
                        [ATCK_WEAP_BLUDGEON, 85],
                        [-ATCK_SPELL_ACID, -50],
                        [ATCK_WEAP_THRUST, -20]
                      ];

      propagate;
   }

   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE);
      AddPacket(4,200, 2,1, 2,1);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE, 4,200, 2,1, 2,3, 2,1);

         return;
      }

      propagate;
   }

   DestroyDisposable()
   {
      return;
   }

   HitSideEffect(what = $, who = $)
   {
      local oSpell, oSpell2;

      if Random(1,POISON_CHANCE) = 1
      {
         oSpell = Send(SYS,@FindSpellByNum,#num=SID_POISON);
         Send(oSpell,@MakePoisoned,#who=what,#lossrate=POISON_LOSSRATE,
               #duration=POISON_DURATION);

         if who <> $
         {
            Send(who,@MsgSendUser,#message_rsc=qspider_illusion_poisoned,
                  #parm1=Send(what,@GetDef),#parm2=Send(what,@GetName),
                  #parm3=Send(what,@GetHisHer));
         }
      }

      if Random(1,4) = 1
      {
         oSpell2 = Send(SYS,@FindSpellByNum,#num=SID_SPIDER_WEB);
         if who <> $
         {
            Send(oSpell2,@CastSpell,#who=who,#lTargets=[what],#ispellpower=30,
                  #bItemCast=TRUE);
         }
         else
         {
            Send(oSpell2,@CastSpell,#who=self,
                  #lTargets=[poTarget],#ispellpower=100);
         }
      }

      return;
   }

   IsAlly(target = $)
   {
      if target = $
      {
         return FALSE;
      }

      if IsClass(target,&Spider)
         OR IsClass(target,&SpiderBaby)
         OR IsClass(target,&SpiderQueen)
      {
         return TRUE;
      }

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
