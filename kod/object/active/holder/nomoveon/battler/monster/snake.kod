// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Snake is Monster

constants:

   include blakston.khd

resources:

   Snake_koc_name_rsc = "ekasni"
   Snake_name_rsc = "giant snake"
   Snake_icon_rsc = Snake.bgf
   Snake_desc_rsc = \
      "A decayed snake, its bite still venomous.  "

   Snake_dead_icon_rsc = SnakeX.bgf
   Snake_dead_name_rsc = "dead snake"

   Snake_sound_hit = wrm_atkh.ogg
   Snake_sound_miss = wrm_atkm.ogg
   Snake_sound_death = wrm_dth.ogg
   Snake_sound_aware = wrm_awr.ogg

classvars:

   vrName = Snake_name_rsc
   vrIcon = Snake_icon_rsc
   vrDesc = Snake_desc_rsc

   viIndefinite = ARTICLE_AN
   vrKocName = Snake_koc_name_rsc

   vrDead_icon = Snake_dead_icon_rsc
   vrDead_name = Snake_dead_name_rsc

   viSpeed = SPEED_FAST
   viAttack_type = ATCK_WEAP_BITE
   viLevel = 60
   viDifficulty = 5
   viVisionDistance = 25
   viKarma = -10
   viCashmin = 100
   viCashmax = 400
   viDefault_behavior = AI_FIGHT_AGGRESSIVE | AI_FIGHT_WIZARD_KILLER
   viAttributes = MOB_SPASM

   viTreasure_type = TID_WIMPY_MEDIUM

   vrSound_hit = Snake_sound_hit
   vrSound_miss = Snake_sound_miss
   vrSound_aware = Snake_sound_aware
   vrSound_death = Snake_sound_death

properties:

   piAnimation = ANIM_NONE

messages:

   Constructed()
   {
      plResistances = [ [-ATCK_WEAP_ALL, -20] ];

      propagate;
   }

   DoSpasm()
   {
      local roll;

      roll = Random(1,10);

      if roll = 1
      {
         Send(self,@DoLegSpasm);

         propagate;
      }

      if roll <= 5
      {
         Send(poOwner,@SomethingTurned,#what=self,
               #new_angle=Random(0,MAX_ANGLE-1));
      }

      propagate;
   }

   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   DoLegSpasm()
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   SendMoveAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE, 4,150, 2,1, 2,2);

      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE);
      AddPacket(4,150, 2,1, 2,2);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE, 4,150, 2,1, 2,3, 2,1);

         return;
      }

      // if no body animation
      AddPacket(1,ANIMATE_NONE,2,1);

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
