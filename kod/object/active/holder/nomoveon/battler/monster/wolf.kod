// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Wolf is Monster

constants:

   include blakston.khd

resources:

   include wolf.lkod

   wolf_koc_name_rsc = "ixleocwolf"
   wolf_name_rsc = "wolf"
   wolf_icon_rsc = wolf.bgf
   wolf_desc_rsc = \
      "A Wolf"

   wolf_dead_icon_rsc = wolfX.bgf
   wolf_dead_name_rsc = "dead wolf"

   wolf_sound_hit = wolf_atkh.ogg
   wolf_sound_miss = wolf_atkh.ogg
   wolf_sound_death = wolf_dth.ogg
   wolf_sound_aware = wolf_awr.ogg

classvars:

   vrKocName = wolf_koc_name_rsc
   vrName = wolf_name_rsc
   vrIcon = wolf_icon_rsc
   vrDesc = wolf_desc_rsc
   vrDead_icon = wolf_dead_icon_rsc
   vrDead_name = wolf_dead_name_rsc

   viSpeed = SPEED_AVERAGE
   viAttack_type = ATCK_WEAP_SLASH
   viDefault_behavior = AI_FIGHT_KARMA_AGGRESSIVE | AI_MOVE_FLEE_FRIGHTENERS

   viDifficulty = 8
   
   viAttackRange = 192
   viKarma = -45
   viCashmin = 175
   viCashmax = 375
   vrSound_hit = wolf_sound_hit
   vrSound_miss = wolf_sound_miss
   vrSound_aware = wolf_sound_aware
   vrSound_death = wolf_sound_death

properties:

   viTreasure_type = TID_ZOMBIE
   viLevel = 55

   piAnimation = ANIM_NONE

   vbSummoned = FALSE

   ptRevertControl = $

messages:

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_UNHOLY, 50 ],
                        [-ATCK_SPELL_HOLY, -25 ] ];
      propagate;
   }

   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;
      
      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE);
      AddPacket(4,200,2,2,2,3);

      return;
   }

   SendMoveAnimation()
   {
      // Cycle through "walking" bitmaps (groups 2-5) at 50 milliseconds per frame
      AddPacket(1,ANIMATE_CYCLE,4,31,2,1,2,12);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
	 AddPacket(1,ANIMATE_ONCE,4,28,2,13,2,18,2,1);
	 return;
      }

      // if no body animation
      
      propagate;
   }

   Delete()
   {
      if ptRevertControl <> $
      {
         deleteTimer(ptRevertControl);
         ptRevertControl = $;
      }
      propagate;
   }
   
   CanMorphTo()
   {
      return false;
   }
   
end
////////////////////////////////////////////////////////////////////////////////
