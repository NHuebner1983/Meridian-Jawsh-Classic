// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Troll is Monster

constants:

   include blakston.khd

resources:

   include troll.lkod
   
   troll_name_rsc = "troll"
   troll_icon_rsc = troll.bgf
   troll_desc_rsc = \
      "Covered with knots of lumpy flesh, the troll has "
      "powerful arms and razor sharp talons."
   troll_koc_name_rsc = "humoch"

   troll_dead_icon_rsc = trollX.bgf
   troll_dead_name_rsc = "dead troll"

   troll_sound_hit = trl_atkh.ogg
   troll_sound_miss = trl_atkm.ogg
   troll_sound_death = trl_dth.ogg
   troll_sound_aware = trl_awr.ogg

classvars:

   vrKocName = troll_koc_name_rsc
   vrName = troll_name_rsc
   vrIcon = troll_icon_rsc
   vrDesc = troll_desc_rsc
   vrDead_icon = troll_dead_icon_rsc
   vrDead_name = troll_dead_name_rsc

   viTreasure_type = TID_HIGH_HUMAN
   viSpeed = SPEED_AVERAGE
   viAttributes = 0
   viLevel = 90
   viDifficulty = 8
   viVisionDistance = 18
   
   viAttackRange = 192
   viKarma = -85
   viDefault_behavior = AI_FIGHT_AGGRESSIVE
   viCashmin = 700
   viCashmax = 1500
   vrSound_hit = troll_sound_hit
   vrSound_miss = troll_sound_miss
   vrSound_aware = troll_sound_aware
   vrSound_death = troll_sound_death

   viBonusXP = 500
   viBonusTP = 1

properties:

   piAnimation = ANIM_NONE

   piReputationGroup = REP_TROLL

messages:

   Constructed()
   {
      plResistances = [ [-ATCK_SPELL_HOLY, -80 ],
                        [ATCK_SPELL_UNHOLY, 80 ],
                        [-ATCK_SPELL_ACID, 80 ],
                        [ATCK_WEAP_NERUDITE, -80 ],
                        [ATCK_WEAP_NONMAGIC, 80 ] ];

      plReputationEnemies = [REP_ORC];

      propagate;
   }

   MonsterAttack(what = $)
   {
      piAnimation = ANIM_ATTACK;
      Send(poOwner,@SomethingChanged,#what=self);
      piAnimation = ANIM_NONE;

      return;
   }

   SendLookAnimation()
   {
      AddPacket(1,ANIMATE_ONCE);
      AddPacket(4,400,2,4,2,7,2,1);

      return;
   }

   SendMoveAnimation()
   {
      AddPacket(1,ANIMATE_CYCLE,4,200,2,2,2,3);

      return;
   }

   SendAnimation()
   {
      if piAnimation = ANIM_ATTACK
      {
         AddPacket(1,ANIMATE_ONCE,4,200,2,4,2,7,2,1);

         return;
      }

      // if no body animation
      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
