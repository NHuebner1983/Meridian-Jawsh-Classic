// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
DeathRealmJasperWest is DeathRealm

constants:

   include blakston.khd

resources:

   room_DeathRealm_JasperWest = jaswest.roo

classvars:

   viTeleport_row = 37
   viTeleport_col = 25

   viTerrain_type = TERRAIN_CITY | TERRAIN_ROAD | TERRAIN_MOUNTAIN

   viWeatherMask = WEATHER_MASK_DEFAULT

properties:

   prRoom = room_DeathRealm_JasperWest
   piRoom_num = RID_DJASWEST

   piDirectional_percent = DIRECTIONAL_PERCENT_OUTDOORS

messages:

   CreateStandardExits()
   {
      plExits = $;

      // Gates to East Jasper
      // Large Gate
      plExits = Cons([ 43, 39, RID_DJASPER, 36, 34, ROTATE_NONE ],plExits);
      plExits = Cons([ 44, 39, RID_DJASPER, 37, 34, ROTATE_NONE ],plExits);
      plExits = Cons([ 45, 39, RID_DJASPER, 38, 34, ROTATE_NONE ],plExits);

      // Small Gate
      plExits = Cons([ 51, 37, RID_DJASPER, 44, 33, ROTATE_NONE ],plExits);
      plExits = Cons([ 52, 37, RID_DJASPER, 44, 33, ROTATE_NONE ],plExits);

      // Hidden Gate
      plExits = Cons([ 59, 32, RID_DJASPER, 51, 28, ROTATE_NONE ],plExits);
      plExits = Cons([ 59, 33, RID_DJASPER, 51, 28, ROTATE_NONE ],plExits);

      plExits = Cons([ 44, 25, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 44, 26, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 64, 20, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 31, 27, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 32, 28, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 52, 20, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 53, 20, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 58, 21, ROOM_LOCKED_DOOR ],plExits);

      plExits = Cons([ 35, 29, ROOM_LOCKED_DOOR ],plExits);

      plExits = Cons([ 43, 37, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 43, 38, ROOM_LOCKED_DOOR ],plExits);

      // Abandoned buildings
      plExits = Cons([ 49, 36, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 51, 33, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 43, 32, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 30, 22, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 34, 21, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 43, 19, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 42, 15, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 38, 15, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 40, 19, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 63, 18, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 45, 34, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 39, 19, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 42, 19, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 64, 22, ROOM_LOCKED_DOOR ],plExits);
      plExits = Cons([ 63, 30, ROOM_LOCKED_DOOR ],plExits);

      plEdge_Exits = $;
      plEdge_Exits = Cons([ LEAVE_WEST, RID_DD7, 40, 48, ANGLE_WEST ], plEdge_exits); 
      plEdge_Exits = Cons([ LEAVE_NORTH, RID_DE7, 48, 32, ANGLE_NORTH ], plEdge_exits); 

      propagate;
   }

   CreateStandardObjects()
   {

      Send(self,@NewHold,#what=Create(&CeresofQor),
           #new_row=30,#new_col=24,#new_angle=ANGLE_WEST);

      propagate;
   }

end
////////////////////////////////////////////////////////////////////////////////
