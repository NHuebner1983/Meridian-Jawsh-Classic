// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
BarHall is BarloqueRoom

constants:

   include blakston.khd
        

resources:

   include barhall.lkod

   room_barhall = barhall.roo
   room_name_barhall = "Adventurer's Hall of Barloque"

   barhall_music = main.ogg

   news_bar_hall = "General News"
   News_bar_hall_desc = "Find out the latest gossip around Meridian."

classvars:

   vrName = room_name_barhall
   viTerrain_Type = TERRAIN_CITY | TERRAIN_SHOP

   viTeleport_row = 5
   viTeleport_col = 5

properties:

   viPermanent_flags = ROOM_NO_COMBAT | ROOM_SAFELOGOFF

   prRoom = room_barhall
   piRoom_num = RID_BAR_HALL

   piBaseLight = LIGHT_NICE
   piOutside_factor = 3

   pbSnowGroundTexture = TRUE

   prMusic = barhall_music

messages:


   CreateStandardExits()
   {
      plExits = $;
      
      /// TO TOWN
      plExits = Cons([ 26, 8, RID_BAR_NORTH, 17, 36, ROTATE_NONE ],plExits);
      
      propagate;
   }
   
   CreateStandardObjects()
   {
      local oNews;

      oNews = Create(&Newslink,#nid=NID_TOS_HALL,
             #name=news_bar_hall,#desc=news_bar_hall_desc);
      Send(self,@NewHold,#what=oNews,#new_row=2,#new_col=8,#fine_row=0,#fine_col=0);

//TEACHER GUY

//      Send(self,@NewHold,#what=Create(&BarloqueMerchant),
//           #new_row=10,#new_col=5,#fine_row=0,#fine_col=0,#new_angle=ANGLE_SOUTH_WEST);

      

      Send(self,@NewHold,#what=Create(&Table),
	   #new_row=5,#new_col=12);
      Send(self,@NewHold,#what=Create(&Table),
	   #new_row=15,#new_col=13);
      Send(self,@NewHold,#what=Create(&Table),
	   #new_row=24,#new_col=13);
      Send(self,@NewHold,#what=Create(&Table),
	   #new_row=20,#new_col=3);

      Send(self,@NewHold,#what=Create(&Brazier),
	   #new_row=25,#new_col=12);
      Send(self,@NewHold,#what=Create(&Brazier),
	   #new_row=24,#new_col=3);
      Send(self,@NewHold,#what=Create(&Brazier),
	   #new_row=15,#new_col=3);
      Send(self,@NewHold,#what=Create(&Brazier),
	   #new_row=17,#fine_row=0,#new_col=9,#fine_col=0);
      Send(self,@NewHold,#what=Create(&Brazier),
	   #new_row=13,#fine_row=0,#new_col=14, #fine_col=0);
      Send(self,@NewHold,#what=Create(&Brazier),
	   #new_row=17,#fine_row=0,#new_col=14,#fine_col=0);

      // Show a Marketplace sign in BQ AH barhall.roo
      Send(self,@NewHold,#what=Create(&Store),
           #new_row=9,#new_col=4,#fine_row=49,#fine_col=59,#new_angle=ANGLE_SOUTH);
                 
      propagate;
   }

   StartSnow(bOnGround=TRUE)
   {
      // Check if we can have weather effects here.
      if NOT pbWeatherEffects
      {
         return;
      }

      // If there's a sandstorm weather effect here, clear it.
      if Send(self,@CheckRoomFlag,#flag=ROOM_SANDSTORM)
      {
         Send(self,@EndSandstorm);
      }

      if bOnGround
      {
         if pbSnowGroundTexture
         {
            // Just need to change the water outside the windows.
            Send(self,@ChangeTexture,#id=10,#new_texture=61017,
                  #flags=CTF_FLOOR);
            // Stop water scroll effect and remove depth.
            Send(self,@SetSectorFlags,#sector=10,#depth=SF_DEPTH0,
                  #scrollSpeed=SCROLL_NONE);
         }
      }

      Send(self,@SetRoomFlag,#flag=ROOM_SNOWING,#value=TRUE);
      Send(self,@WeatherChanged);

      return;
   }

   EndSnow(override=FALSE)
   "Use override if rooms have manually placed textures."
   {
      if Send(self,@CheckRoomFlag,#flag=ROOM_SNOWING)
      {
         Send(self,@SetRoomFlag,#flag=ROOM_SNOWING,#value=FALSE);
         Send(self,@WeatherChanged);
      }

      if pbSnowGroundTexture
         OR override
      {
         Send(self,@RemoveTextureChange,#id=10);
         Send(self,@RemoveSectorFlagChange,#id=10);
      }

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
