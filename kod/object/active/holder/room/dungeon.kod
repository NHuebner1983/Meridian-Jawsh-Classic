// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


///////////////////////////////////////////////////////////////////////////////
DungeonVictoria is Room

constants:

   include blakston.khd

   HOURS_PER_TOY = 24

resources:

   include dungeon.lkod

   room_dungeon = greeny.roo
   room_name_dungeon = "Underbasement of Victoria"
   dungeon_music = cave.ogg

   climb_crates_rsc = "You climb up on the crate."
   dungeon_climb_down_rsc = "You jump down off the crate."
   search_crates_rsc = "You rummage around in an open crate."
   found_in_crate_rsc = "You find something of interest!"

classvars:

   vrName = room_name_dungeon

   viTeleport_row = 13
   viTeleport_col = 2

   viTerrain_Type = TERRAIN_SEWERS | TERRAIN_CASTLE

properties:

   piRoom_num = RID_DUNGEON
   prRoom = room_dungeon
   prMusic = dungeon_music

   piBaseLight = 80
   piOutside_factor = 0

   piHoursCounter = HOURS_PER_TOY
   poLastFinder = $

   plFind = $

messages:

   CreateStandardObjects()
   {
      if plFind = $
      {
         plFind = [ &TrueLute,
                    &Tanktop,
                    &ShrunkenHead,
                    &MummyMask,
                    &ShrunkenHeadMask,
                    &DaemonMask,
                    &SkullMask,
                    &FeyMask,
                    &XeoMask,
                    &Shilling,
                    &EntrootBerry,
                    &PurpleMushroom,
                    &BlueMushroom,
                    &RedMushroom,
                    &YellowMushroom,
                    &YrxlSap,
                    &PolishedSeraphym,
                    &KriipaClaw,
                    &ShamanBlood,
                    &MagicBow,
                    &NeruditeBow,
                    &Book,
                    &Rose,
                    &GuildShield,
                    &AphrodesiacPotion,
                    &LabeledWand,
                    &GiantDaemonSkeleton,
                    &Mimic,
                    &Ghost,
                    &Junk ];
      }

      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=26,#new_col=5,#fine_row=48,#fine_col=62);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=26,#new_col=23,#fine_row=48,#fine_col=34);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=5,#new_col=21,#fine_row=1,#fine_col=48);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=2,#new_col=18,#fine_row=31,#fine_col=48);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=1,#new_col=6,#fine_row=47,#fine_col=34);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=4,#new_col=4,#fine_row=47,#fine_col=29);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=7,#new_col=2,#fine_row=48,#fine_col=32);
      Send(self,@NewHold,#what=Create(&DynamicLight,#iColor=LIGHT_FIRE,#iIntensity=30),
           #new_row=26,#new_col=2,#fine_row=47,#fine_col=32);

      propagate;
   }

   CreateStandardExits()
   {
      plExits = $;

      plExits = Cons([ 25, 2, RID_CASTLE1, 5, 32, ROTATE_NONE ],plExits);

      return;
   }

   RecalcLightAndWeather()
   {
      --piHoursCounter;

      propagate;
   }

   SomethingTryGo(what = $,row = $,col = $)
   {
      local find, iNewRow, iNewCol, iNumbered;

      if (row = 10) AND (col = 7)
      {
         Send(SYS,@UtilGoNearSquare,#what=what,#where=self,#new_row=10,#new_col=6);
         Send(what,@MsgSendUser,#message_rsc=climb_crates_rsc);

         return TRUE;
      }

      // Rummaging around in the crate.
      // If it's not the last person who found something, and enough time
      // has elapsed, "find" (create) something of interest for them.
      //
      // The plFind is a list of classes.
      // We create one instance of a randomly chosen class.
      // If it's an item, we give it to them.
      // Some items have special properties, such as random coloring.
      // If it's a monster, we generate it at their feet.

      if (row = 10) AND (col = 6)
      {
         Send(what,@MsgSendUser,#message_rsc=search_crates_rsc);

         // Have to post this here, happens no matter what after the rest.
         Post(self,@RemovePlayerFromCrate,#who=what);

         // if what = poLastFinder
         // {
         //    return TRUE;
         // }

         if piHoursCounter <= 0
         {
            piHoursCounter = HOURS_PER_TOY + Random(1, 10);

            if plFind = $
            {
               return TRUE;
            }

            if Length(plFind) > 0
            {
               find = Nth(plFind,Random(1,Length(plFind)));
            }
            else
            {
               find = plFind;
            }

            if find = $
            {
               return TRUE;
            }

            find = Create(find);

            if IsClass(find, &NumberItem)
            {
               // Numbered items
               if IsClass(find,&Shilling)
               {
                  // Shillings
                  iNumbered = 250000;
               }
               else
               {
                  // Number of Reagents
                  iNumbered = 250;
               }

               Send(find,@AddNumber,#number=iNumbered);
            }

            if find = $
            {
               return TRUE;
            }

            Send(what,@MsgSendUser,#message_rsc=found_in_crate_rsc);
            poLastFinder = what;

            if IsClass(find,&Item)
            {
               if IsClass(find,&Tanktop)
               {
                  Send(find,@Exotic);
               }
               if IsClass(find,&ShirtBase)
               {
                  Send(find,@Randomize);
               }
               if IsClass(find,&GuildShield)
               {
                  Send(find,@Randomize);
               }

               // Wrap the item in a gift box!
               find = Send(find,@WrapMe);

               Send(what,@NewHold,#what=find);
            }

            if IsClass(find,&Monster)
            {
               // Offset the monster a bit so that it appears, instead of
               // trying to fit two things in the same space.
               iNewRow = 11;
               iNewCol = 6;

               if Send(self,@ReqNewHold,#what=find,#new_row=iNewRow,#new_col=iNewCol)
                  AND Send(self,@ReqSomethingMoved,#what=find,#new_row=iNewRow,#new_col=iNewCol)
               {
                  Send(self,@NewHold,#what=find,#new_row=iNewRow,#new_col=iNewCol);
               }
               else
               {
                  Send(find,@Delete);
                  find = $;
               }
            }
         }

         return TRUE;
      }

      propagate;
   }

   RemovePlayerFromCrate(who = $)
   {
      if (who = $ OR Send(who,@GetOwner) <> self) OR (who <> $ AND IsClass(who, &DM))
      {
         return;
      }

      // Port the player off the crate
      Send(SYS,@UtilGoNearSquare,#what=who,#where=self,#new_row=8,#new_col=5);
      Send(who,@MsgSendUser,#message_rsc=dungeon_climb_down_rsc);

      return;
   }

end
////////////////////////////////////////////////////////////////////////////////
