// Meridian 59, Copyright 1994-2012 Andrew Kirmse and Chris Kirmse.
// All rights reserved.
//
// This software is distributed under a license that is described in
// the LICENSE file that accompanies it.
//
// Meridian is a registered trademark.


////////////////////////////////////////////////////////////////////////////////
Fire is Stroke

constants:

   include blakston.khd

resources:

   include fire.lkod

   fire_name_rsc = "fire"
   fire_icon_rsc = fibowico.bgf
   fire_desc_rsc = "Fire is the most basic technique used for shooting a missile weapon.  "
      "It is not too difficult to learn, but only those with strong aim will be able to master "
      "this skill."

   fire_only_missile_weapon = "You may only use the 'fire' skill with a missile weapon in hand."
   fire_need_weapon = "You must have a missile weapon in hand to 'fire' at anyone."
   fire_wrong_ammo = "You do not have the proper ammunition equipped to use with %s%s."

   fire_new_ammo = "You reach for your %s, and nock one back for a shot."
   fire_skill_intro = "Weaponcraft Lv. 4: Key to mastering any type of missile weapon."
   fire_no_ammo = "You have no ammunition for this weapon ready!"

classvars:

   vrName = fire_name_rsc
   vrIcon = fire_icon_rsc
   vrDesc = fire_desc_rsc

   viIndefinite = ARTICLE_NONE
   viDefinite = ARTICLE_NONE

   viSchool = SKS_FENCING
   viSkill_Num = SKID_FIRE
   viSkill_level = 4 
   viChance_to_increase = 50
   viMeditate_ratio = 30

   viSkillExertion = 2
   vbCheck_exertion = FALSE

properties:

   plPrerequisites = $

   piChanceToIncrease = 100

messages:

   // General combat messages:

   // Finds ammo and uses it if not used.
   FindLikelyAmmo(who=$,report=FALSE)
   {
      local oWeapon, oLikelyAmmo, oAmmo, cAmmoType, iAmmoValue, i;

      oWeapon = Send(who,@LookupPlayerWeapon);
      if oWeapon = $
      {
         if report { Send(who,@MsgSendUser,#message_rsc=fire_need_weapon); }
         return $;
      }
      if not IsClass(oWeapon,&RangedWeapon)
      {
         if report { Send(who,@MsgSendUser,#message_rsc=fire_only_missile_weapon); }
         return $;
      }

      cAmmoType = Send(oWeapon,@GetAmmoType);

      oLikelyAmmo = $;

      foreach i in Send(who,@GetPlayerUsing)
      {
         if Send(i,@GetItemUseType) = ITEM_USE_QUIVER
         {
            oLikelyAmmo = i;
         }
      }

      if oLikelyAmmo = $
      {
         iAmmoValue = 1000000; // higher than any ammo value

         /// if the player doesn't have any arrows available and equipped,
         /// auto-equip the cheapest ones.

         foreach i in Send(who,@GetHolderPassive)
         {
            if (Send(i,@GetItemUseType) = ITEM_USE_QUIVER)
               AND (Send(i,@GetAmmoType) = cAmmoType)
               AND ((Send(i,@GetValue)/Send(i,@GetNumber)) < iAmmoValue)
            {
               oLikelyAmmo = i;
               iAmmoValue = Send(i,@GetValue)/Send(i,@GetNumber);
            }
         }
         // Use the ammo!
         if oLikelyAmmo <> $
         {
            Send(who,@TryUseItem,#what=oLikelyAmmo);
         }
      }

      if report AND (oLikelyAmmo = $)
      {
         Send(who,@MsgSendUser,#message_rsc=fire_no_ammo);
      }

      return oLikelyAmmo;
   }

   CanPayCosts(who=$,oTarget=$)
   {
      local oAmmo;

      oAmmo = Send(self,@FindLikelyAmmo,#who=who,#report=TRUE);
      if oAmmo <> $
      {
         return TRUE;
      }

      return FALSE;
   }

   GetRequisiteStat(who=$)
   {
      return Send(who,@GetAim);
   }

   PayCosts(who=$)
   {
      local oAmmo, oRoom;

      oRoom = Send(who,@GetOwner);
      oAmmo = Send(self,@FindLikelyAmmo,#who=who);
      if oAmmo = $
      {
         Send(who,@MsgSendUser,#message_rsc=fire_no_ammo);
         return;
      }

      Send(who,@MsgSendUser,#message_rsc=fire_new_ammo,
        #parm1=Send(oAmmo,@GetName));

      Send(Send(who,@GetOwner),@SomethingShot,#who=who,
        #target=Send(who,@GetKillTarget), #projectile=oAmmo);

      if Send(oRoom,@NoReagents)=FALSE
      {
         Send(oAmmo,@SubtractNumber,#number=1);
      }

      propagate;
   }

   IsRangedAttack()
   {
      return TRUE;
   }

end
////////////////////////////////////////////////////////////////////////////////
